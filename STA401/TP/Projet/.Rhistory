#1)
mtcars$gear
mtcars$am
table(mtcars$gear,mtcar$am)
table(mtcars$gear,mtcars$am)
prop.table(t)
t <- table(mtcars$gear,mtcars$am)
prop.table(t)
#Diagramme en secteur (avec la var utilisée)
barplot(table(am))
#Diagramme en secteur (avec la var utilisée)
barplot(table(mtcars$am))
#2)
barplot(t)
table(mtcars$am)
#SUJET 5
#1)
mtcars$gear
mtcars$am
#2)
barplot(t,xlab = "Transmission (0 = auto, 1 = manuel")
#SUJET 6
#1)
mtcars$carb
#La variable carb indique le nombre de carburateur sur une voiture en entier.
par(c(2,1))
barplot(mtcars$carb)
barplot(c(1,2,3,4))
#La variable carb indique le nombre de carburateur sur une voiture en entier.
par(c(2,1))
barplot(mtcars$carb)
barplot(c(1,2,3,4))
#La variable carb indique le nombre de carburateur sur une voiture en entier.
par(c(1,2))
barplot(mtcars$carb)
barplot(c(1,2,3,4))
#La variable carb indique le nombre de carburateur sur une voiture en entier.
par(c(1,2))
barplot(mtcars$carb)
barplot(c(1,2,3,4))
cume_dist
cume_dist()
cume_dist(mtcars$carb)
dplyr.cume_dist(mtcars$carb)
library(dplyr)
library(dplyr)
dplyr.cume_dist(mtcars$carb)
install.packages(dplyr)
install.packages("dplyr")
install.packages("dplyr")
dplyr.cume_dist(mtcars$carb)
cume_dist(mtcars$carb)
dplyr
library("dplyr")
cume_dist(mtcars$carb)
curve(cume_dist(mtcars$carb),0,1)
curve(cume_dist(x),0,1)
#SUJET 6
#1)
install.packages("dplyr")
install.packages("dplyr")
library("dplyr")
mtcars$carb
#La variable carb indique le nombre de carburateur sur une voiture en entier.
par(c(1,2))
barplot(mtcars$carb)
x <- mtcars$carb
curve(cume_dist(x),0,1)
#La variable carb indique le nombre de carburateur sur une voiture en entier.
par(mfrow=c(1,2))
barplot(mtcars$carb)
x <- mtcars$carb
curve(cume_dist(x),0,1)
#La variable carb indique le nombre de carburateur sur une voiture en entier.
par(mfrow=c(2,1))
barplot(mtcars$carb)
x <- mtcars$carb
curve(cume_dist(x),0,1)
curve(cume_dist(x),0,1, main="fonction de répartition empirique du nombre de carburateurs")
barplot(mtcars$carb, main="")
barplot(mtcars$carb, main="Nombre de carburateurs par voiture")
x <- mtcars$carb
curve(cume_dist(x),0,1, main="fonction de répartition empirique du nombre de carburateurs")
quantile(mtcars$carb)
quantile(mtcars$carb,c(0.1,0.2))
quantile(mtcars$carb,c(0.1,0.2,0.6,1))
quantile(mtcars$carb)
quantile(mtcars$carb,c(0.1))
quantile(mtcars$carb,c(0.05))
curve(cume_dist(x),0,1, main="fonction de répartition empirique du nombre de carburateurs", n=0.1)
curve(cume_dist(x),0,1, main="fonction de répartition empirique du nombre de carburateurs", n=0.1)
curve(cume_dist(x),0,1, main="fonction de répartition empirique du nombre de carburateurs")
curve(cume_dist(x),0,1, main="fonction de répartition empirique du nombre de carburateurs", type=0.1)
#SUJET 3
#1)
#Mpg représente la consomattion en Miles/gallon, et wt représente le poids en tonnes.
plot(mtcars$wt, mtcars$mpg, type = "p", main="Graphique")
#SUJET 3
#1)
#Mpg représente la consommation en Miles/gallon, et wt représente le poids en tonnes.
plot(mtcars$wt, mtcars$mpg, type = "p", main="Graphique de la consommation en fonction du poids du véhicule", xlab="poids (en tonnes)", ylab="consommation (en Miles/gallion)")
lm(mtcars$mpg mtcars$wt)$coefficients
lm(mtcars$mpg,mtcars$wt)$coefficients
lm(mtcars$mpg mtcars$wt)$coefficients
#SUJET 4
#1)
hist(mtcars$qsec, main="Histogramme de l'échantillon qsec")
lm(c(mtcars$mpg,mtcars$wt))$coefficients
lm(slope,c(mtcars$mpg,mtcars$wt))$coefficients
lm(mtcars$mpg~mtcars$wt)$coefficients
lm(mtcars$mpg~mtcars$wt)$coefficients
lm(mtcars$mpg~mtcars$wt)$slope
lm(mtcars$mpg~mtcars$wt)$intercept
coefficients
lm(mtcars$mpg~mtcars$wt)$coefficients
abline(lm(mtcars$mpg~mtcars$wt)$coefficients)
#SUJET 3
#1)
#Mpg représente la consommation en Miles/gallon, et wt représente le poids en tonnes.
plot(mtcars$wt, mtcars$mpg, type = "p", main="Graphique de la consommation en fonction du poids du véhicule", xlab="poids (en tonnes)", ylab="consommation (en Miles/gallion)")
abline(lm(mtcars$mpg~mtcars$wt)$coefficients)
#SUJET 3
#1)
#Mpg représente la consommation en Miles/gallon, et wt représente le poids en tonnes.
par(mfrow=c(1,1))
plot(mtcars$wt, mtcars$mpg, type = "p", main="Graphique de la consommation en fonction du poids du véhicule", xlab="poids (en tonnes)", ylab="consommation (en Miles/gallion)")
abline(lm(mtcars$mpg~mtcars$wt)$coefficients)
abline(lm(mtcars$mpg~mtcars$wt)$coefficients, col="red")
cyl <- mtcars$cyl
mpg <- mtcars$mpg
length(mpg)
M <- matrix(c(mpg,cyl), ncol=2, byrow=F)
m4 <- which(M[,2] == 4)
m6 <- which(M[,2] == 6)
m8 <- which(M[,2] == 8)
par(mfrow=c(1,1))
boxplot(M[m4],M[m6],M[m8],names=c(4,6,8),main = "Indicateur de consommation selon le nombre de cylindres",ylab = "indicateur de consommation", xlab="nombre de cylindre")
m4
moy4 <- mean(M[m4])
moy6 <- mean(M[m6])
moy8 <- mean(M[m8])
abline(h=moy4)
abline(h=moy6)
abline(h=moy8)
boxplot(mtcars$mpg~mtcars$carb,main = "Indicateur de consommation selon le nombre de carburateurs",ylab = "indicateur de consommation", xlab="nombre de carburateurs")
M <- matrix(c(mtcars$mpg,mtcars$carb), ncol=2, byrow=F)
abline(h=mean(M[which(M[,2] == 1)]))
abline(h=mean(M[which(M[,2] == 2)]))
abline(h=mean(M[which(M[,2] == 3)]))
abline(h=mean(M[which(M[,2] == 4)]))
abline(h=mean(M[which(M[,2] == 6)]))
abline(h=mean(M[which(M[,2] == 8)]))
par(mfrow=c(1,1))
plot(mtcars$wt, mtcars$mpg, type = "p", main="Graphique de la consommation en fonction du poids du véhicule", xlab="poids (en tonnes)", ylab="consommation (en Miles/gallion)")
abline(lm(mtcars$mpg~mtcars$wt)$coefficients, col="red")
hist(mtcars$qsec, main="Histogramme de l'échantillon qsec")
abline(v=mean(mtcars$qsec), col="red")
abline(v=median(mtcars$qsec), col="green")
#2)
curve(dnorm(x,mean(mtcars$qsec),sd(mtcars$qsec)),col = "red", add=T)
t <- table(mtcars$gear,mtcars$am)
prop.table(t)
#2)
barplot(t,xlab = "Transmission (0 = auto, 1 = manuel")
library("dplyr")
#La variable carb indique le nombre de carburateur sur une voiture en entier.
par(mfrow=c(2,1))
barplot(mtcars$carb, main="Nombre de carburateurs par voiture")
x <- mtcars$carb
curve(cume_dist(x),0,1, main="fonction de répartition empirique du nombre de carburateurs",)
quantile(mtcars$carb,c(0.1))
#Exercice préliminaire
MU = c(0,0,0,3)
SIGMA = c(1,0,5,2,1)
for(i in 1:length(MU)){
curve(dnorm(x,MU[i], SIGMA[i]),from = -8, ylim=c(0,1), col=i,add=i!=1)
}
curve(dnorm(x,MU[i], SIGMA[i]),from = -8, to=8, ylim=c(0,1), col=i,add=i!=1)
SIGMA = c(1,0,5,2,1)
for(i in 1:length(MU)){
curve(dnorm(x,MU[i], SIGMA[i]),from = -8, to=8, ylim=c(0,1), col=i,add=i!=1)
}
for(i in 1:length(MU)){
curve(dnorm(x,MU[i], SIGMA[i]),from = -8, to=8, ylim=c(0,1), col=i,add=i!=1)
}
legend(-6,1,legend=1:length(MU), lty=1, col= 1:length(MU))
segment(x0,y0,x1,y1)
abline(v=c(-1,1),lty = 2)
segment(x0,y0,x1,y1)
segment(x0=-1,y0=0,x1=1,lwd = 2, col="red)"
segment(x0=-1,y0=0,x1=1,lwd = 2, col="red")
segment(x0=-1,y0=0,x1=1,lwd = 2, col="red")
segments(x0=-1,y0=0,x1=1,lwd = 2, col="red")
#Exercice préliminaire
MU = c(0,0,0,3)
SIGMA = c(1,0,5,2,1)
for(i in 1:length(MU)){
curve(dnorm(x,MU[i], SIGMA[i]),from = -8, to=8, ylim=c(0,1), col=i,add=i!=1)
}
legend(-6,1,legend=1:length(MU), lty=1, col= 1:length(MU))
abline(v=c(-1,1),lty = 2)
segments(x0=-1,y0=0,x1=1,lwd = 2, col="red")
curve(dnorm(x,mu,sigma),from = -6, to = 8, ylim = c(0,1))
#2
mu = 1
sigma = 2
curve(dnorm(x,mu,sigma),from = -6, to = 8, ylim = c(0,1))
curve(pnorm(x,mu,sigma),from = -6, to = 8, add = T, col = "red")
curve(dnorm(x,mu,sigma),from = -6, to = 8, ylim = c(0,2), n=301)
curve(pnorm(x,mu,sigma),from = -6, to = 8, add = T, col = "red", n=301)
#2
mu = -1
sigma = 0.2
curve(dnorm(x,mu,sigma),from = -6, to = 8, ylim = c(0,2), n=301)
curve(pnorm(x,mu,sigma),from = -6, to = 8, add = T, col = "red", n=301)
#Exerice 1
mu  =2
sigma = 3
pnorm(4,mu,sigma)-pnorm(-2,mu,sigma)
curve(dnorm(x,mu,sigma),from=-4,to=8)
abline(v=c(-2,4),lty=2)
pnorm(mu+m*sigma,mu,sigma)-pnorm(mu-m*sigma,mu,sigma)
curve(dnorm(x,mu,sigma),from=-4,to=8)
abline(v=c(mu-m*sigma,mu+m*sigma),lty=2)
abline(v=mu, col=3)
mu = 2
sigma = 3
m=2
pnorm(mu+m*sigma,mu,sigma)-pnorm(mu-m*sigma,mu,sigma)
curve(dnorm(x,mu,sigma),from=-4,to=8)
abline(v=c(mu-m*sigma,mu+m*sigma),lty=2)
abline(v=mu, col=3)
m=3
pnorm(mu+m*sigma,mu,sigma)-pnorm(mu-m*sigma,mu,sigma)
curve(dnorm(x,mu,sigma),from=-4,to=8)
abline(v=c(mu-m*sigma,mu+m*sigma),lty=2)
abline(v=mu, col=3)
ordres = 1:9:(n+1)
ordres = 1:9/(n+1)
ordres = 1:9/(n+1)
#4
n=9
ordres = 1:9/(n+1)
qnorm(ordres,mu,sigma)
#5
curve(pnorm(x), from = -3, to = 3)
points(x = ordres, y = rep(0,9))
segments(x0, deciles, y0 = 0, y1 = ordres)
segments(x0 = deciles, y0 = 0, y1 = ordres)
deciles = qnorm(ordres,mu,sigma)
#5
curve(pnorm(x), from = -3, to = 3)
points(x = ordres, y = rep(0,9))
segments(x0 = deciles, y0 = 0, y1 = ordres)
segments(x0 = deciles, y0 = 0, y1 = ordres,  lty = 2)
segments(x0 = -3, x1 = deciles, y0 = ordres, lty=2)
#6
mu = -1
sigma = 5
decilesX = qnorm(ordres,mu,sigma)
deciles = qnorm(ordres,mu,sigma)
decilesU = deciles
#5
curve(pnorm(x), from = -3, to = 3)
points(x = ordres, y = rep(0,9))
segments(x0 = deciles, y0 = 0, y1 = ordres,  lty = 2)
segments(x0 = -3, x1 = deciles, y0 = ordres, lty=2)
deciles[9]
#6
mu = -1
sigma = 5
decilesX = qnorm(ordres,mu,sigma)
plot(decilesU, deciles)
plot(decilesU, decilesX)
plot(decilesU, decilesX)
#7
abline(mu,sigma)
#6
mu = -1
sigma = 5
decilesX = qnorm(ordres,mu,sigma)
plot(decilesU, decilesX)
#7
abline(mu,sigma)
segments(x0 = -4, x1 = deciles, y0 = ordres, lty=2)
deciles[9]
#6
mu = -1
sigma = 5
decilesX = qnorm(ordres,mu,sigma)
plot(decilesU, decilesX)
#7
abline(mu,sigma)
cyl <- mtcars$cyl
mpg <- mtcars$mpg
length(mpg)
M <- matrix(c(mpg,cyl), ncol=2, byrow=F)
m4 <- which(M[,2] == 4)
m6 <- which(M[,2] == 6)
m8 <- which(M[,2] == 8)
par(mfrow=c(1,1))
boxplot(M[m4],M[m6],M[m8],names=c(4,6,8),main = "Indicateur de consommation selon le nombre de cylindres",ylab = "indicateur de consommation", xlab="nombre de cylindre")
m4
moy4 <- mean(M[m4])
moy6 <- mean(M[m6])
moy8 <- mean(M[m8])
abline(h=moy4)
abline(h=moy6)
abline(h=moy8)
cyl <- mtcars$cyl
mpg <- mtcars$mpg
M <- matrix(c(mpg,cyl), ncol=2, byrow=F)
M <- matrix(c(mpg,cyl), ncol=2, byrow=F)
m4 <- which(M[,2] == 4)
m6 <- which(M[,2] == 6)
m8 <- which(M[,2] == 8)
par(mfrow=c(1,1))
boxplot(M[m4],M[m6],M[m8],names=c(4,6,8),main = "Indicateur de consommation selon le nombre de cylindres",ylab = "indicateur de consommation", xlab="nombre de cylindre")
boxplot(M[m4],M[m6],M[m8],names=c("paire 2",6,8),main = "Indicateur de consommation selon le nombre de cylindres",ylab = "indicateur de consommation", xlab="nombre de cylindre")
boxplot(M[m4],M[m6],M[m8],names=c("paire 2","paire 4","paire 6"),main = "Indicateur de consommation selon le nombre de cylindres",ylab = "indicateur de consommation", xlab="nombre de cylindre")
moy4 <- mean(M[m4])
moy6 <- mean(M[m6])
moy8 <- mean(M[m8])
abline(h=moy4)
abline(h=moy6)
abline(h=moy8)
moy4 <- mean(M[m4])
boxplot(M[m4],M[m6],M[m8],names=c("paire 2","paire 3","paire 4"),main = "Indicateur de consommation selon le nombre de cylindres",ylab = "indicateur de consommation", xlab="nombre de cylindre")
setwd("~/GitHub/L2_INFO/STA401/TP/Projet")
library(readr)
Sondage_sur_le_temps_de_repas_r�_ponses_ <- read_csv("Sondage sur le temps de repas (réponses).csv")
View(Sondage_sur_le_temps_de_repas_r�_ponses_)
Sondage.sur.le.temps.de.repas <- read.csv("~/GitHub/L2_INFO/STA401/TP/Projet/Sondage sur le temps de repas.csv")
View(Sondage.sur.le.temps.de.repas)
res <- Sondage.sur.le.temps.de.repas
midi <- res$Midi
soir <- res$Soir
summary(midi)
summary(soir)
summary(res)
sd(res)
sd(midi)
sd(soir)
#Summary des résultats
summary(res)
#Ecart-type poru midi et soir
sd(midi)
sd(soir)
#boxplot
boxplot(midi,soir)
#boxplot
boxplot(midi,soir, main="Temps de repas le midi et le soir (en min)", ylab="Temps (en min)", xlab=c("Temps pris pour manger le midi","Temps pris pour manger le soir"))
#boxplot
boxplot(midi,soir, main="Temps de repas le midi et le soir (en min)", ylab="Temps (en min)", xlab=c("Midi","Soir"))
#boxplot
boxplot(midi,soir, main="Temps de repas le midi et le soir (en min)", ylab="Temps (en min)", names=c("Midi","Soir"))
#histogramme
hist(midi,soir, main="")
#histogramme
hist(midi,soir, main="")
#histogramme
hist(midi, main="")
#histogramme
cpar(frow=c(1,2))
hist(midi, main="")
#histogramme
par(mfrow=c(1,2))
hist(midi, main="")
hist(soir, main="")
#histogramme
par(mfrow=c(1,1))
hist(midi, main="")
hist(soir, main="")
hist(midi, main="")
hist(soir, main="")
hist(midi, main="")
hist(soir, main="")
hist(midi, main="")
hist(midi, main="")
hist(soir, main="")
hist(res, main="")
hist(mtcars$qsec, main="Histogramme de l'échantillon qsec")
hist(mtcars$qsec, main="Histogramme de l'échantillon qsec")
hist(mtcars$qsec, main="Histogramme de l'échantillon qsec")
#quantile-quantile plot
qqnorm(midi,soir)
#quantile-quantile plot
qqnorm(midi)
qqnorm(soir)
#quantile-quantile plot
qnorm(midi)
#quantile-quantile plot
par(mfrow=c(1,2))
qqnorm(midi, main="histogramme des résultats du midi")
qqnorm(soir, main="histogramme des résultats du soir")
qqnorm(c(midi,soir), main="histogramme des résultats du midi")
#quantile-quantile plot
par(mfrow=c(1,1))
qqnorm(c(midi,soir), main="histogramme des résultats du midi")
qqnorm(soir, main="histogramme des résultats du soir")
qqnorm(c(midi,soir), main="histogramme des résultats du midi")
qqline(midi)
#quantile-quantile plot
par(mfrow=c(1,2))
qqnorm(midi, main="histogramme des résultats du midi")
qqline(midi)
qqnorm(soir, main="histogramme des résultats du soir")
qqline(midi)
qqline(soir)
#quantile-quantile plot
par(mfrow=c(1,2))
qqnorm(midi, main="histogramme des résultats du midi")
qqline(midi)
qqnorm(soir, main="histogramme des résultats du soir")
qqline(soir)
deciles = qnorm(ordres,mu,sigma)
ordres = 1:9/(n+1)
deciles = qnorm(ordres,mu,sigma)
ordres = 1:9/(n+1)
#4
n=9
ordres = 1:9/(n+1)
deciles = qnorm(ordres,mu,sigma)
#3
mu = 2
sigma = 3
deciles = qnorm(ordres,mu,sigma)
#histogramme
par(mfrow=c(1,2))
hist(midi, main="")
#Création des variables avec les données récoltées (en min)
res <- Sondage.sur.le.temps.de.repas
midi <- res$Midi
soir <- res$Soir
#Summary des résultats
summary(res)
#Ecart-type pour midi et soir
sd(midi)
sd(soir)
#boxplot
boxplot(midi,soir, main="Temps de repas le midi et le soir (en min)", ylab="Temps (en min)", names=c("Midi","Soir"))
#histogramme
par(mfrow=c(1,2))
hist(midi, main="")
hist(soir, main="")
#Création des variables avec les données récoltées (en min)
res <- Sondage.sur.le.temps.de.repas
Sondage.sur.le.temps.de.repas <- read.csv("~/GitHub/L2_INFO/STA401/TP/Projet/Sondage sur le temps de repas.csv")
View(Sondage.sur.le.temps.de.repas)
#Création des variables avec les données récoltées (en min)
res <- Sondage.sur.le.temps.de.repas
midi <- res$Midi
soir <- res$Soir
#Summary des résultats
summary(res)
#Ecart-type pour midi et soir
sd(midi)
sd(soir)
#boxplot
boxplot(midi,soir, main="Temps de repas le midi et le soir (en min)", ylab="Temps (en min)", names=c("Midi","Soir"))
#histogramme
par(mfrow=c(1,2))
hist(midi, main="")
curve(dnorm(x), from = -3, to = 3)
abline(curve(dnorm(x), from = -3, to = 3))
hist(midi, main="")
abline(curve(dnorm(x), from = -3, to = 3))
abline(dnorm(x), from = -3, to = 3)
hist(midi, main="")
abline(dnorm(midi), from = -3, to = 3)
abline(dnorm(midi))
hist(midi, main="")
abline(dnorm(midi))
lines(dnorm(x))
lines(dnorm(midi))
#histogramme
par(mfrow=c(1,2))
hist(midi, main="")
lines(dnorm(midi))
dnorm(midi)
curve(dnorm(midi))
curve(dnorm(x))
lines(dnorm(midi), col="black")
#histogramme
par(mfrow=c(1,2))
hist(midi, main="")
lines(dnorm(midi), col="black")
lines(dnorm(midi), col="black")
lines(dnorm(midi), col="black", lwd=2)
plot(hist(midi, main=""))
lines(dnorm(midi), col="black", lwd=2)
plot(hist(midi, main=""))
lines(dnorm(midi), col="black", lwd=2)
plot(hist(midi, main=""))
lines(dnorm(x), col="black", lwd=2)
plot(hist(midi, main=""))
lines(dnorm(x,mean(midi),sd(midi)), col="black", lwd=2)
dnorm(x,mean(midi),sd(midi))
curve(dnorm(x,mean(midi),sd(midi)))
plot(hist(midi, main=""))
curve(dnorm(x,mean(midi),sd(midi)))
#histogramme
par(mfrow=c(1,2))
plot(hist(midi, main=""))
curve(dnorm(x,mean(midi),sd(midi)))
plot(hist(midi, main=""))
plot(hist(midi, main=""))
hist(soir, main="")
#histogramme
par(mfrow=c(1,2))
plot(hist(midi, main=""))
curve(dnorm(x,mean(midi),sd(midi)))
