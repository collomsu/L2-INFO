# Exercice 1 ( Minimum et maximum )
# 1.
vec <- c(1,2,3,4,4)
V <- sample(vec)
U <- sample(vec)
# Exercice 1 ( Minimum et maximum )
# 1.
vec <- c(1,2,3,4,4)
V <- sample(vec,1)
U <- sample(vec,1)
X <- min(U,V)
Y <- max(U,V)
res <- runif(1000,X,Y)
res
res <- runif.int(1000,X,Y)
res<-round(res)
res
# 2.
plot(X)
tablê(X)
(X)
(X)
(X)
# 2.
plot(X)
plot(Y)
table(X,Y)
par(mfrow=c(1,2))
table(res)
par(mfrow=c(1,2))
# 2.
plot(X,Y)
table(res)
par(mfrow=c(1,2))
# 2.
plot(X,Y)
table(res)
par(mfrow=c(1,2))
# 2.
plot.table(res,X,Y)
table(res)
par(mfrow=c(1,2))
# Exercice 1 ( Minimum et maximum )
# 1.
N = 1000
U = sample(1:5, N, replace=T)
V = sample(1:5, N, replace=T)
X <- min(U,V)
Y <- max(U,V)
res <- runif(1000,X,Y)
res<-round(res)
res
# Exercice 1 ( Minimum et maximum )
# 1.
N = 1000
U = sample(1:5, N, replace=T)
V = sample(1:5, N, replace=T)
X <- min(U,V)
Y <- max(U,V)
res <- runif(1000,X,Y)
#res<-round(res)
res
tableau <- cbind(U,V)
X <- apply(tableau,1,min)
Y <- apply(tableau,1,max)
couple <- cbind(X,Y)
# 2.
plot(X,Y)
table(res)
par(mfrow=c(1,2))
# Exercice 1 ( Minimum et maximum )
# 1.
N = 1000
U = sample(1:5, N, replace=T)
V = sample(1:5, N, replace=T)
X <- min(U,V)
Y <- max(U,V)
tableau <- cbind(U,V)
X <- apply(tableau,1,min)
Y <- apply(tableau,1,max)
couple <- cbind(X,Y)
# 2.
plot(X,Y)
table(res)
par(mfrow=c(1,2))
hist(res)
par(mfrow=c(1,2))
# 2.
plot(X,Y)
table(res)
hist(res)
par(mfrow=c(1,2))
# 2.
par(mfrow=c(1,2))
table(X)
plot(table(X))
plot(table(Y))
# 3.
sum(X >= 4)/N
sum(Y = 3)/N
sum(X = 3, Y = 5)
sum(Y >= 4|X = 3)
sum(Y >= 4,X = 3)
# 3.
sum(X >= 4)/N
length(which(X>=4))/4
sum(Y == 3)/N
sum(X == 3, Y == 5)
sum(X == 3, Y == 5)
sum(X == 3 & Y == 5)
sum(Y >= 4 & X == 3)/sum(X==3)
sum(X == 3 & Y == 5)/N
sum(Y[X == 3] >= 4)
sum(Y[X == 3] >= 4)/sum(X==3)
mean(X*Y)-mean(X)*mean(Y)
# Exercice 1 ( Minimum et maximum )
# 1.
N <- 1000
U <- sample(1:5, N, replace=T)
V <- sample(1:5, N, replace=T)
X <- min(U,V)
Y <- max(U,V)
tableau <- cbind(U,V)
X <- apply(tableau,1,min)
Y <- apply(tableau,1,max)
couple <- cbind(X,Y)
# 2ème méthode
N = 1000
U = sample(1:5,N,replace=T)
V = sample(1:5,N,replace=T)
X = pmin(U,V)
Y = pmax(U,V)
couple = cbind(X,Y)
couple
# 2.
par(mfrow=c(1,2))
table(X)
plot(table(X))
plot(table(Y))
# 3.
sum(X >= 4)/N
sum(Y == 3)/N
sum(X == 3 & Y == 5)/N
sum(Y >= 4 & X == 3)/sum(X==3)
sum(Y[X == 3] >= 4)/sum(X==3)
# E(X)
mean(X)
# E(Y)
mean(Y)
mean(X*Y)-mean(X)*mean(Y)
# f)
sigmanx = sqrt(var(X)*(N-1)/N)
sigmany = sqrt(var(Y)*(N-1)/N)
cor = cova/(sigmanx*sigmany)
sd(X)
sd(Y)
# g)
mean(U[Y==4])
# 2.
# a)
K <- sample(1:6,10000,replace=T)
# b)
pile = NULL
for (n in des)
pile = C(pile,rbinom(1,n,1/2))
mean(pile)
# Exercice 3
# 1.
x <- dpois(1000,2)
y <- rpos(1000,3)
# 2.
z <- x + y
# 3.
# a)
N <- 1000
X <- rpois(N,2)
Y <- rpois(N,3)
# 2)
Z <- X + Y
# 3)
plot(table(Z)/N)
# b)
lines(0:13,dpois(0:13,5))
# b)
lines(0:13,dpois(0:13,5))
λ <- 20
l <- 20
l <- 20
p <- 0.75
nb <- 2000
X <- rpois(nb,l)
Y <- sample(1:2,nb,TRUE,NULL)
P <- rbinom(nb,X,p)
F <- rbinom(nb,X,1-p)
E <- p*l
EspP <- mean(P)
E
EspP
# b) P(X = 18, P = 15)
P <- sum(X==18 & P==15)/2000
P
# c) l'espérance et la variance de F.
# Que peut-on conjecturer quant à la loi de F ?
EF <- mean(F)
VarF <- var(F)
EF
VarF
m <- matrix(c(0,0),nrow=2,ncol=1)
m
# Création de la matrice des covariances
varcov <- matrix(c(1,1/4,1/4,2),nrow=2,ncol=2)
varcov
X <- rnorm(2000,m,sqrt(varcov))
hist(X,probability=T)
X <- rnorm(2000,1,1)
U <- rnorm(2000,2,2)
hist(U,probability=T)
X <- rnorm(2000,1,1)
U <- rnorm(2000,2,2)
hist(U,probability=T)
V <- X*X-2*X+1
hist(V,probability=T)
#Chargement des données et affectation à un data.frame appelénotes
###################################################################
setwd("~/GitHub/L2_INFO/STA401/TP/TP NOTE")
read.table("DonneesEvalTP2021.txt",header=T,sep="\t",dec=",")->notes
#Chargement des données et affectation à un data.frame appelénotes
###################################################################
setwd("~/GitHub/L2_INFO/STA401/TP/TP NOTE")
read.table("DonneesEvalTP2021.txt",header=T,sep="\t",dec=",")->notes
#Exercice 1
setwd("~/GitHub/L2_INFO/STA401/TP/TP NOTE")
read.table("DonneesEvalTP2021.txt",header=T,sep="\t",dec=",")->notes
x<-notes$CC1
notes[,12]
length(notes$Sexe[notes$Sexe==1]) #nombre de garÃ§ons parmi les 60 etudiants
length(notes[,12])
#et le sous echantillons des notes de CC2 du GTP3 avec
notes[notes$GTP==3,11]  #ou encore avec
notes[notes$GTP == 3,"CC2"]
x<-notes[notes$GTD == 1,"CC1"]
y<-notes[notes$GTD == 1,"CC2"]
z<-notes[notes$GTD == 1,"CC1"] < 8
z
z<-x< 8
z
mean(x)
var(y)
mean(x)
sqrt(var(y))
sd(y)
sd(x)
mean(x)
sd(x)
mean(y)
sd(y)
mean(z)
sd(z)
prop.test(z,length(z), p, conf.level = 0.95, correct = T)
legnth(z == TRUE)
length(z == TRUE)
z == TRUE
ztrue = z == TRUE
ztrue
prop.test(8,length(z), p, conf.level = 0.95, correct = T)
prop.test(8,length(z), z, conf.level = 0.95, correct = T)
prop.test(8,length(z), mean(z), conf.level = 0.95, correct = T)
prop.test(8,length(z), mean(z), conf.level = 0.60, correct = T)
prop.test(8,length(z), mean(z), conf.level = 0.60, correct = T)
prop.test(8,length(z), mean(z), conf.level = 0.80, correct = T)
prop.test(8,length(z), mean(z), conf.level = 0.20, correct = T)
prop.test(8,length(z), 0.15, conf.level = 0.95, correct = T)
prop.test(8,length(z), mean(z), conf.level = 0.95, correct = T)
oui = z[,0] == TRUE
oui = z[] == TRUE
table(z)["TRUE"]
prop.test(table(z)["TRUE"],length(z), NULL, conf.level = 0.95, correct = T)
prop.test(table(z)["TRUE"],length(z), NULL, conf.level = 0.90, correct = T)
prop.test(table(z)["TRUE"],length(z), NULL, conf.level = 0.99, correct = T)
prop.test(table(z)["TRUE"],length(z), NULL, conf.level = 0.95, correct = T)
prop.test(table(z)["TRUE"],length(z), NULL, conf.level = 0.60, correct = T)
prop.test(table(z)["TRUE"],length(z), NULL, conf.level = 0.10, correct = T)
prop.test(table(z)["TRUE"],length(z), NULL, conf.level = 0.99, correct = T)
